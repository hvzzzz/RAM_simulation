{"ast":null,"code":"var _jsxFileName = \"/home/han4n/RAM/RAM_simulation/GUI/robot-ram/src/components/RobotState.jsx\";\nimport React, { Component } from \"react\";\nimport { Col, Row } from \"react-bootstrap\";\nimport Config from \"../scripts/Config\";\nimport * as Three from \"three\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass RobotState extends Component {\n  constructor() {\n    super();\n    this.state = {\n      ros: null,\n      x: 0,\n      y: 0,\n      orientation: 0,\n      l_velocity: 0,\n      a_velocity: 0\n    };\n    this.init_connection();\n  }\n\n  init_connection() {\n    this.state.ros = new window.ROSLIB.Ros(); //this.setState.ros = new window.ROSLIB.Ros();\n\n    this.state.ros.on(\"connection\", () => {\n      this.setState({\n        connected: true\n      });\n      console.log(\"Conexion Establecida\");\n    });\n    this.state.ros.on(\"close\", () => {\n      this.setState({\n        connected: false\n      });\n      console.log(\"Conexion Cerrada\");\n      setTimeout(() => {\n        try {\n          //this.state.ros.connect(\"ws://192.168.0.18:9090\");\n          this.state.ros.connect(\"ws://\" + Config.ROSBRIDGE_SERVER_IP + \":\" + Config.ROSBRIDGE_SERVER_PORT + \"\");\n        } catch (error) {\n          console.log(\"Problema con la conexion\");\n        }\n      }, Config.TIME_RECONNECTION);\n    });\n\n    try {\n      this.state.ros.connect(\"ws://\" + Config.ROSBRIDGE_SERVER_IP + \":\" + Config.ROSBRIDGE_SERVER_PORT + \"\");\n    } catch (error) {\n      console.log(\"Problema con la conexion\");\n    }\n  }\n\n  componentDidMount() {\n    this.getRobotState();\n  }\n\n  getRobotState() {\n    //Create Pose Subscriber\n    var pose_subscriber = new window.ROSLIB.Topic({\n      ros: this.state.ros,\n      name: Config.POSE_TOPIC,\n      messageType: \"geometry_msgs/PoseWithCovarianceStamped\"\n    }); //Create Pose Callback\n\n    pose_subscriber.subscribe(message => {\n      this.setState({\n        x: message.pose.pose.position.x.toFixed(3)\n      });\n      this.setState({\n        y: message.pose.pose.position.y.toFixed(3)\n      });\n      this.setState({\n        orientation: this.getOrientationFromQuaternion(message.pose.pose.orientation).toFixed(3)\n      });\n    }); //Create Velocity Subscriber \n\n    var velocity_subscriber = new window.ROSLIB.Topic({\n      ros: this.state.ros,\n      name: Config.ODOM_TOPIC,\n      messageType: \"nav_msgs/Odometry\"\n    }); //Create Velocity Callback\n\n    velocity_subscriber.subscribe(message => {\n      this.setState({\n        l_velocity: message.twist.twist.linear.x.toFixed(3)\n      });\n      this.setState({\n        a_velocity: message.twist.twist.angular.z.toFixed(3)\n      });\n    });\n  }\n\n  getOrientationFromQuaternion(ros_orientation_quaternion) {\n    var q = new Three.Quaternion(ros_orientation_quaternion.x, ros_orientation_quaternion.y, ros_orientation_quaternion.z, ros_orientation_quaternion.w); //convert to euler\n\n    var euler = new Three.Euler().setFromQuaternion(q);\n    return euler[\"_z\"] * (180 / Math.PI);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mt-4\",\n            children: \"Posicion\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-0\",\n            children: [\"X: \", this.state.x]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-0\",\n            children: [\"Y: \", this.state.y]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-0\",\n            children: [\"Phi: \", this.state.orientation]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mt-4\",\n            children: \"Velocidad\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-0\",\n            children: [\"Lineal: \", this.state.l_velocity]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-0\",\n            children: [\"Angular: \", this.state.a_velocity]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default RobotState;","map":{"version":3,"names":["React","Component","Col","Row","Config","Three","RobotState","constructor","state","ros","x","y","orientation","l_velocity","a_velocity","init_connection","window","ROSLIB","Ros","on","setState","connected","console","log","setTimeout","connect","ROSBRIDGE_SERVER_IP","ROSBRIDGE_SERVER_PORT","error","TIME_RECONNECTION","componentDidMount","getRobotState","pose_subscriber","Topic","name","POSE_TOPIC","messageType","subscribe","message","pose","position","toFixed","getOrientationFromQuaternion","velocity_subscriber","ODOM_TOPIC","twist","linear","angular","z","ros_orientation_quaternion","q","Quaternion","w","euler","Euler","setFromQuaternion","Math","PI","render"],"sources":["/home/han4n/RAM/RAM_simulation/GUI/robot-ram/src/components/RobotState.jsx"],"sourcesContent":["import React,{ Component } from \"react\";\nimport { Col,Row } from \"react-bootstrap\";\nimport Config from \"../scripts/Config\";\nimport * as Three from \"three\";\n\nclass RobotState extends Component{\n    state = {\n        ros: null,\n        x:0,\n        y:0,\n        orientation:0,\n        l_velocity:0,\n        a_velocity:0,\n    };\n\n    constructor(){\n        super();\n        this.init_connection();\n    };\n\n    init_connection(){\n        this.state.ros = new window.ROSLIB.Ros();\n        //this.setState.ros = new window.ROSLIB.Ros();\n        this.state.ros.on(\"connection\",()=> {\n            this.setState({connected:true});\n            console.log(\"Conexion Establecida\");\n        });\n\n        this.state.ros.on(\"close\",()=> {\n            this.setState({connected:false});\n            console.log(\"Conexion Cerrada\");\n            setTimeout(()=> {\n                try{\n                    //this.state.ros.connect(\"ws://192.168.0.18:9090\");\n                    this.state.ros.connect(\"ws://\"+Config.ROSBRIDGE_SERVER_IP+\":\"+Config.ROSBRIDGE_SERVER_PORT+\"\");\n                } catch (error) {\n                    console.log(\"Problema con la conexion\")\n                }\n            },Config.TIME_RECONNECTION);\n        });\n        try{\n            this.state.ros.connect(\"ws://\"+Config.ROSBRIDGE_SERVER_IP+\":\"+Config.ROSBRIDGE_SERVER_PORT+\"\");\n        } catch (error) {\n            console.log(\"Problema con la conexion\")\n        }\n    };\n\n    componentDidMount(){\n        this.getRobotState();\n    };\n\n    getRobotState(){\n        //Create Pose Subscriber\n        var pose_subscriber = new window.ROSLIB.Topic({\n            ros: this.state.ros,\n            name: Config.POSE_TOPIC,\n            messageType: \"geometry_msgs/PoseWithCovarianceStamped\",\n        });\n\n        //Create Pose Callback\n        pose_subscriber.subscribe((message)=> {\n            this.setState({ x: message.pose.pose.position.x.toFixed(3) });\n            this.setState({ y: message.pose.pose.position.y.toFixed(3)});\n            this.setState({ orientation: this.getOrientationFromQuaternion(message.pose.pose.orientation).toFixed(3)});\n        });\n\n        //Create Velocity Subscriber \n        var velocity_subscriber = new window.ROSLIB.Topic({\n            ros: this.state.ros,\n            name: Config.ODOM_TOPIC,\n            messageType: \"nav_msgs/Odometry\",\n        });\n\n        //Create Velocity Callback\n        velocity_subscriber.subscribe((message)=> {\n            this.setState({ l_velocity: message.twist.twist.linear.x.toFixed(3) });\n            this.setState({ a_velocity: message.twist.twist.angular.z.toFixed(3)});\n        });\n    };\n\n    getOrientationFromQuaternion(ros_orientation_quaternion){\n        var q = new Three.Quaternion(\n            ros_orientation_quaternion.x,\n            ros_orientation_quaternion.y,\n            ros_orientation_quaternion.z,\n            ros_orientation_quaternion.w,\n        );\n        //convert to euler\n        var euler = new Three.Euler().setFromQuaternion(q);\n        return euler[\"_z\"] * (180/Math.PI);\n    };\n     \n    render(){\n        return (\n            <div>\n                <Row>\n                    <Col>\n                    <h4 className=\"mt-4\">Posicion</h4>\n                    <p className=\"mt-0\">X: {this.state.x}</p>\n                    <p className=\"mt-0\">Y: {this.state.y}</p>\n                    <p className=\"mt-0\">Phi: {this.state.orientation}</p>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col>\n                    <h4 className=\"mt-4\">Velocidad</h4>\n                    <p className=\"mt-0\">Lineal: {this.state.l_velocity}</p>\n                    <p className=\"mt-0\">Angular: {this.state.a_velocity}</p>\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n\n}\nexport default RobotState;"],"mappings":"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"},"metadata":{},"sourceType":"module"}