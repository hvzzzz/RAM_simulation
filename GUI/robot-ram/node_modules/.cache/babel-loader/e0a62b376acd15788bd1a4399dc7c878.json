{"ast":null,"code":"var _jsxFileName = \"/home/han4n/RAM/RAM_simulation/GUI/robot-ram/src/components/Teleoperation.jsx\";\nimport React, { Component } from \"react\";\nimport { Joystick } from 'react-joystick-component';\nimport Config from \"../scripts/Config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Teleoperation extends Component {\n  constructor() {\n    super();\n    this.state = {\n      ros: null\n    };\n    this.init_connection();\n    this.handleMove = this.handleMove.bind(this);\n    this.handleStop = this.handleMove.bind(this);\n  }\n\n  init_connection() {\n    this.state.ros = new window.ROSLIB.Ros(); //this.setState.ros = new window.ROSLIB.Ros();\n\n    this.state.ros.on(\"connection\", () => {\n      this.setState({\n        connected: true\n      });\n      console.log(\"Conexion Establecida\");\n    });\n    this.state.ros.on(\"close\", () => {\n      this.setState({\n        connected: false\n      });\n      console.log(\"Conexion Cerrada\");\n      setTimeout(() => {\n        try {\n          //this.state.ros.connect(\"ws://192.168.0.18:9090\");\n          this.state.ros.connect(\"ws://\" + Config.ROSBRIDGE_SERVER_IP + \":\" + Config.ROSBRIDGE_SERVER_PORT + \"\");\n        } catch (error) {\n          console.log(\"Problema con la conexion\");\n        }\n      }, Config.TIME_RECONNECTION);\n    });\n\n    try {\n      this.state.ros.connect(\"ws://\" + Config.ROSBRIDGE_SERVER_IP + \":\" + Config.ROSBRIDGE_SERVER_PORT + \"\");\n    } catch (error) {\n      console.log(\"Problema con la conexion\");\n    }\n  }\n\n  handleMove(event) {\n    console.log(\"Handle Move\"); //Publisher of VeloCity Topic\n\n    var cmd_vel = new window.ROSLIB.Topic({\n      ros: this.state.ros,\n      name: Config.CMD_VEL_TOPIC,\n      messageType: \"geometry_msgs/Twist\"\n    }); //Create Twist Message\n\n    var twist = new window.ROSLIB.Message({\n      linear: {\n        x: event.y * Config.VEl_LIN_MAX / 75,\n        y: 0,\n        z: 0\n      },\n      angular: {\n        x: 0,\n        y: 0,\n        z: -event.x * Config.VEL_ANG_MAX / 75\n      }\n    }); //Publish of VeloCity Topic\n\n    cmd_vel.publish(twist);\n  }\n\n  handleStop(event) {\n    console.log(\"Handle Stop\"); //Publisher of VeloCity Topic\n\n    var cmd_vel = new window.ROSLIB.Topic({\n      ros: this.state.ros,\n      name: Config.CMD_VEL_TOPIC,\n      messageType: \"geometry_msgs/Twist\"\n    }); //Create Twist Message\n\n    var twist = new window.ROSLIB.Message({\n      linear: {\n        x: 0,\n        y: 0,\n        z: 0\n      },\n      angular: {\n        x: 0,\n        y: 0,\n        z: 0\n      }\n    }); //Publish of VeloCity Topic\n\n    cmd_vel.publish(twist);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Joystick, {\n        size: 150,\n        sticky: false,\n        baseColor: \"#EEEEEE\",\n        stickColor: \"#BBBBBB\",\n        move: this.handleMove,\n        stop: this.handleStop\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Teleoperation;","map":{"version":3,"names":["React","Component","Joystick","Config","Teleoperation","constructor","state","ros","init_connection","handleMove","bind","handleStop","window","ROSLIB","Ros","on","setState","connected","console","log","setTimeout","connect","ROSBRIDGE_SERVER_IP","ROSBRIDGE_SERVER_PORT","error","TIME_RECONNECTION","event","cmd_vel","Topic","name","CMD_VEL_TOPIC","messageType","twist","Message","linear","x","y","VEl_LIN_MAX","z","angular","VEL_ANG_MAX","publish","render"],"sources":["/home/han4n/RAM/RAM_simulation/GUI/robot-ram/src/components/Teleoperation.jsx"],"sourcesContent":["import React,{ Component } from \"react\";\nimport { Joystick } from 'react-joystick-component';\nimport Config from \"../scripts/Config\";\n\nclass Teleoperation extends Component{\n    state = {ros:null };\n\n    constructor(){\n        super();\n        this.init_connection();\n        this.handleMove = this.handleMove.bind(this);\n        this.handleStop = this.handleMove.bind(this);\n    }\n\n    init_connection(){\n        this.state.ros = new window.ROSLIB.Ros();\n        //this.setState.ros = new window.ROSLIB.Ros();\n        this.state.ros.on(\"connection\",()=> {\n            this.setState({connected:true});\n            console.log(\"Conexion Establecida\");\n        });\n\n        this.state.ros.on(\"close\",()=> {\n            this.setState({connected:false});\n            console.log(\"Conexion Cerrada\");\n            setTimeout(()=> {\n                try{\n                    //this.state.ros.connect(\"ws://192.168.0.18:9090\");\n                    this.state.ros.connect(\"ws://\"+Config.ROSBRIDGE_SERVER_IP+\":\"+Config.ROSBRIDGE_SERVER_PORT+\"\");\n                } catch (error) {\n                    console.log(\"Problema con la conexion\")\n                }\n            },Config.TIME_RECONNECTION);\n        });\n        try{\n            this.state.ros.connect(\"ws://\"+Config.ROSBRIDGE_SERVER_IP+\":\"+Config.ROSBRIDGE_SERVER_PORT+\"\");\n        } catch (error) {\n            console.log(\"Problema con la conexion\")\n        }\n    }\n    handleMove(event) {\n        console.log(\"Handle Move\");\n        //Publisher of VeloCity Topic\n        var cmd_vel = new window.ROSLIB.Topic({\n            ros: this.state.ros,\n            name: Config.CMD_VEL_TOPIC,\n            messageType: \"geometry_msgs/Twist\",\n        })\n        //Create Twist Message\n        var twist = new window.ROSLIB.Message({\n            linear:{\n                x:event.y*Config.VEl_LIN_MAX/75,\n                y:0,\n                z:0,\n            },\n            angular:{\n                x:0,\n                y:0,\n                z:-event.x*Config.VEL_ANG_MAX/75,\n            },\n        });\n        //Publish of VeloCity Topic\n        cmd_vel.publish(twist);\n    }\n    handleStop(event) {\n        console.log(\"Handle Stop\");\n        //Publisher of VeloCity Topic\n        var cmd_vel = new window.ROSLIB.Topic({\n            ros: this.state.ros,\n            name: Config.CMD_VEL_TOPIC,\n            messageType: \"geometry_msgs/Twist\",\n        })\n        //Create Twist Message\n        var twist = new window.ROSLIB.Message({\n            linear:{\n                x:0,\n                y:0,\n                z:0,\n            },\n            angular:{\n                x:0,\n                y:0,\n                z:0,\n            },\n        });\n        //Publish of VeloCity Topic\n        cmd_vel.publish(twist);\n    }\n\n    render(){\n        return (\n            <div>\n                    <Joystick \n                    size={150} \n                    sticky={false} \n                    baseColor=\"#EEEEEE\" \n                    stickColor=\"#BBBBBB\" \n                    move={this.handleMove} \n                    stop={this.handleStop}>\n                </Joystick>\n            </div>\n        );\n    }\n\n}\nexport default Teleoperation;"],"mappings":"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"},"metadata":{},"sourceType":"module"}