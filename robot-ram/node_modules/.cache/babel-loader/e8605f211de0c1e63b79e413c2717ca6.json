{"ast":null,"code":"var _jsxFileName = \"/home/han4n/RAM/RAM_simulation/robot-ram/src/components/Connection.jsx\";\nimport React, { Component } from \"react\";\nimport Alert from \"react-bootstrap/Alert\";\nimport Config from \"../scripts/Config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Connection extends Component {\n  constructor() {\n    super();\n    this.state = {\n      connected: true,\n      ros: null\n    };\n    this.init_connection();\n  }\n\n  init_connection() {\n    this.state.ros = new window.ROSLIB.Ros(); //this.setState.ros = new window.ROSLIB.Ros();\n\n    this.state.ros.on(\"connection\", () => {\n      this.setState({\n        connected: true\n      });\n      console.log(\"Conexion Establecida\");\n    });\n    this.state.ros.on(\"close\", () => {\n      this.setState({\n        connected: false\n      });\n      console.log(\"Conexion Cerrada\");\n      setTimeout(() => {\n        try {\n          //this.state.ros.connect(\"ws://192.168.0.18:9090\");\n          this.state.ros.connect(\"ws://\" + Config.ROSBRIDGE_SERVER_IP + \":\" + Config.ROSBRIDGE_SERVER_PORT + \"\");\n        } catch (error) {\n          console.log(\"Problema con la conexion\");\n        }\n      }, Config.TIME_RECONNECTION);\n    });\n\n    try {\n      this.state.ros.connect(\"ws://\" + Config.ROSBRIDGE_SERVER_IP + \":\" + Config.ROSBRIDGE_SERVER_PORT + \"\");\n    } catch (error) {\n      console.log(\"Problema con la conexion\");\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        className: \"text-center m-3\",\n        variant: this.state.connected ? \"success\" : \"danger\",\n        children: this.state.connected ? \"Robot Conectado\" : \"Robot Desconectado\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Connection;","map":{"version":3,"names":["React","Component","Alert","Config","Connection","constructor","state","connected","ros","init_connection","window","ROSLIB","Ros","on","setState","console","log","setTimeout","connect","ROSBRIDGE_SERVER_IP","ROSBRIDGE_SERVER_PORT","error","TIME_RECONNECTION","render"],"sources":["/home/han4n/RAM/RAM_simulation/robot-ram/src/components/Connection.jsx"],"sourcesContent":["import React, { Component } from \"react\";\nimport Alert from \"react-bootstrap/Alert\";\nimport Config from \"../scripts/Config\";\n\nclass Connection extends Component {\n    state ={ connected: true, ros: null };\n\n    constructor(){\n        super();\n        this.init_connection();\n    }\n\n    init_connection(){\n        this.state.ros = new window.ROSLIB.Ros();\n        //this.setState.ros = new window.ROSLIB.Ros();\n        this.state.ros.on(\"connection\",()=> {\n            this.setState({connected:true});\n            console.log(\"Conexion Establecida\");\n        });\n\n        this.state.ros.on(\"close\",()=> {\n            this.setState({connected:false});\n            console.log(\"Conexion Cerrada\");\n            setTimeout(()=> {\n                try{\n                    //this.state.ros.connect(\"ws://192.168.0.18:9090\");\n                    this.state.ros.connect(\"ws://\"+Config.ROSBRIDGE_SERVER_IP+\":\"+Config.ROSBRIDGE_SERVER_PORT+\"\");\n                } catch (error) {\n                    console.log(\"Problema con la conexion\")\n                }\n            },Config.TIME_RECONNECTION);\n        });\n        try{\n            this.state.ros.connect(\"ws://\"+Config.ROSBRIDGE_SERVER_IP+\":\"+Config.ROSBRIDGE_SERVER_PORT+\"\");\n        } catch (error) {\n            console.log(\"Problema con la conexion\")\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <Alert className=\"text-center m-3\" variant={this.state.connected? \"success\" : \"danger\"}>\n                    {this.state.connected? \"Robot Conectado\" : \"Robot Desconectado\"}</Alert>\n            </div>\n        );\n    }\n}\n\nexport default Connection;"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;;AAEA,MAAMC,UAAN,SAAyBH,SAAzB,CAAmC;EAG/BI,WAAW,GAAE;IACT;IADS,KAFbC,KAEa,GAFN;MAAEC,SAAS,EAAE,IAAb;MAAmBC,GAAG,EAAE;IAAxB,CAEM;IAET,KAAKC,eAAL;EACH;;EAEDA,eAAe,GAAE;IACb,KAAKH,KAAL,CAAWE,GAAX,GAAiB,IAAIE,MAAM,CAACC,MAAP,CAAcC,GAAlB,EAAjB,CADa,CAEb;;IACA,KAAKN,KAAL,CAAWE,GAAX,CAAeK,EAAf,CAAkB,YAAlB,EAA+B,MAAK;MAChC,KAAKC,QAAL,CAAc;QAACP,SAAS,EAAC;MAAX,CAAd;MACAQ,OAAO,CAACC,GAAR,CAAY,sBAAZ;IACH,CAHD;IAKA,KAAKV,KAAL,CAAWE,GAAX,CAAeK,EAAf,CAAkB,OAAlB,EAA0B,MAAK;MAC3B,KAAKC,QAAL,CAAc;QAACP,SAAS,EAAC;MAAX,CAAd;MACAQ,OAAO,CAACC,GAAR,CAAY,kBAAZ;MACAC,UAAU,CAAC,MAAK;QACZ,IAAG;UACC;UACA,KAAKX,KAAL,CAAWE,GAAX,CAAeU,OAAf,CAAuB,UAAQf,MAAM,CAACgB,mBAAf,GAAmC,GAAnC,GAAuChB,MAAM,CAACiB,qBAA9C,GAAoE,EAA3F;QACH,CAHD,CAGE,OAAOC,KAAP,EAAc;UACZN,OAAO,CAACC,GAAR,CAAY,0BAAZ;QACH;MACJ,CAPS,EAORb,MAAM,CAACmB,iBAPC,CAAV;IAQH,CAXD;;IAYA,IAAG;MACC,KAAKhB,KAAL,CAAWE,GAAX,CAAeU,OAAf,CAAuB,UAAQf,MAAM,CAACgB,mBAAf,GAAmC,GAAnC,GAAuChB,MAAM,CAACiB,qBAA9C,GAAoE,EAA3F;IACH,CAFD,CAEE,OAAOC,KAAP,EAAc;MACZN,OAAO,CAACC,GAAR,CAAY,0BAAZ;IACH;EACJ;;EAEDO,MAAM,GAAG;IACL,oBACI;MAAA,uBACI,QAAC,KAAD;QAAO,SAAS,EAAC,iBAAjB;QAAmC,OAAO,EAAE,KAAKjB,KAAL,CAAWC,SAAX,GAAsB,SAAtB,GAAkC,QAA9E;QAAA,UACK,KAAKD,KAAL,CAAWC,SAAX,GAAsB,iBAAtB,GAA0C;MAD/C;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QADJ;EAMH;;AA1C8B;;AA6CnC,eAAeH,UAAf"},"metadata":{},"sourceType":"module"}